# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:
- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Python38:
        python.version: '3.8'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

#  - script: |
#      python -m pip install --upgrade pip wheel setuptools
#    displayName: 'Install pip and wheel'

  - script:
      (Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py -UseBasicParsing).Content | python -
    displayName: 'Install Poetry'

  - script: |
      %USERPROFILE%\.poetry\bin\poetry install -E dnssec -E doh -E idna -E trio -E curio
    displayName: 'Install python dependencies'

#  - script: |
#      python -m pip install requests requests-toolbelt idna cryptography
#      python -m pip install trio sniffio curio
#    displayName: 'Install python dependencies'

  - script: |
      dotnet tool install --global Codecov.Tool
    displayName: 'Install Codecov.Tool'

  - script: |
      %USERPROFILE%\.poetry\bin\poetry run python -m pip install pytest-azurepipelines
      %USERPROFILE%\.poetry\bin\poetry run pytest --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html
    displayName: 'pytest'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'

#  - task: PublishCodeCoverageResults@1
#    inputs:
#      codeCoverageTool: Cobertura
#      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'

  - script: |
      %USERPROFILE%\.dotnet\tools\codecov -f coverage.xml
    displayName: 'Upload to codecov'
